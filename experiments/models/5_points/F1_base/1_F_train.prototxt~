name: "F1_base_lfw_net_224x224_rgb"

# train data
layer {
  name: "lmdb_data"
  type: "Data"
  top: "data"
  include {
    phase: TRAIN
  }
  data_param {
    source: "./experiments/data_processing/dataset/train/lfw_net_224x224_rgb_data"
    batch_size: 64
    backend: LMDB
  }
  transform_param {
    mean_file: "./experiments/data_processing/dataset/train/lfw_net_224x224_rgb_mean.binaryproto"
  }
}

layer {
  name: "lmdb_landmark"
  type: "Data"
  top: "landmark"
  include {
    phase: TRAIN
  }
  data_param {
    source: "./experiments/data_processing/dataset/train/lfw_net_224x224_rgb_landmark"
    batch_size: 64
    backend: LMDB
  }
}

# test data
layer {
  name: "lmdb_data_test"
  type: "Data"
  top: "data"
  include {
    phase: TEST
  }
  data_param {
    source: "./experiments/data_processing/dataset/test/lfw_net_224x224_rgb_data"
    batch_size: 64
    backend: LMDB
  }
  transform_param {
    mean_file: "./experiments/data_processing/dataset/test/lfw_net_224x224_rgb_mean.binaryproto"
  }
}

layer {
  name: "lmdb_landmark_test"
  type: "Data"
  top: "landmark"
  include {
    phase: TEST
  }
  data_param {
    source: "./experiments/data_processing/dataset/test/lfw_net_224x224_rgb_landmark"
    batch_size: 64
    backend: LMDB
  }
}

layer {
  name: "lmdb_eyedist_test"
  type: "Data"
  top: "eyedist"
  include {
    phase: TEST
  }
  data_param {
    source: "./experiments/data_processing/dataset/test/lfw_net_224x224_rgb_eyedist"
    batch_size: 64
    backend: LMDB
  }
}

layer {
    name: "conv1"
    type: "Convolution"
    bottom: "data"
    top: "conv1"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param {
        num_output: 20
        kernel_size: 4
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}

layer {
    name: "relu1"
    type: "ReLU"
    bottom: "conv1"
    top: "conv1"
}

layer {
    name: "pool1"
    type: "Pooling"
    bottom: "conv1"
    top: "pool1"
    pooling_param {
        pool: MAX
        kernel_size: 2
        stride: 2
    }
}

layer {
    name: "conv2"
    type: "Convolution"
    bottom: "pool1"
    top: "conv2"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param {
        num_output: 40
        kernel_size: 3
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}

layer {
    name: "relu2"
    type: "ReLU"
    bottom: "conv2"
    top: "conv2"
}

layer {
    name: "pool2"
    type: "Pooling"
    bottom: "conv2"
    top: "pool2"
    pooling_param {
        pool: MAX
        kernel_size: 2
        stride: 2
    }
}

layer {
    name: "conv3"
    type: "Convolution"
    bottom: "pool2"
    top: "conv3"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param {
        num_output: 60
        kernel_size: 3
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}

layer {
    name: "relu3"
    type: "ReLU"
    bottom: "conv3"
    top: "conv3"
}

layer {
    name: "pool3"
    type: "Pooling"
    bottom: "conv3"
    top: "pool3"
    pooling_param {
        pool: MAX
        kernel_size: 2
        stride: 2
    }
}

layer {
    name: "conv4"
    type: "Convolution"
    bottom: "pool3"
    top: "conv4"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param {
        num_output: 80
        kernel_size: 2
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}

layer {
    name: "relu4"
    type: "ReLU"
    bottom: "conv4"
    top: "conv4"
}

layer {
    name: "fc1"
    type: "InnerProduct"
    bottom: "conv4"
    top: "fc1"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    inner_product_param {
        num_output: 120
        weight_filler {
            type: "gaussian"
            std: 0.005
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}

layer {
    name: "relu_fc1"
    type: "ReLU"
    bottom: "fc1"
    top: "fc1"
}

layer {
    name: "fc2"
    type: "InnerProduct"
    bottom: "fc1"
    top: "fc2"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    inner_product_param {
        num_output: 10
        weight_filler {
            type: "gaussian"
            std: 0.005
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}

layer {
  name: "performance"
  type: "FacialLandmarkPerformance"
  bottom: "fc2"
  bottom: "landmark"
  bottom: "eyedist"
  top: "average_error"
  top: "false_rate"
  
  facial_landmark_performance_param {
    num_landmark: 5
    error_threshold: 0.1
  }
  include {
    phase: TEST
  }
}

layer {
  name: "euclidean_loss"
  type: "EuclideanLoss"
  bottom: "fc2"
  bottom: "landmark"
  top: "euclidean_loss"
}
