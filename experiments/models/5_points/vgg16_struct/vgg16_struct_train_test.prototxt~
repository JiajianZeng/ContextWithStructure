name: "vgg16_struct_lfw_net_224x224_rgb"

# train data
layer {
  name: "lmdb_data"
  type: "Data"
  top: "data"
  include {
    phase: TRAIN
  }
  data_param {
    source: "./experiments/data_processing/dataset/train/lfw_net_224x224_rgb_data"
    batch_size: 64
    backend: LMDB
  }
  transform_param {
    mean_file: "./experiments/data_processing/dataset/train/lfw_net_224x224_rgb_mean.binaryproto"
  }
}

layer {
  name: "lmdb_landmark"
  type: "Data"
  top: "landmark"
  include {
    phase: TRAIN
  }
  data_param {
    source: "./experiments/data_processing/dataset/train/lfw_net_224x224_rgb_landmark"
    batch_size: 64
    backend: LMDB
  }
}

# root means the geometry center of the five landmarks
layer {
  name: "lmdb_root"
  type: "AveragePoint"
  bottom: "landmark"
  top: "root"
  propagate_down: false
  include {
    phase: TRAIN
  }
  average_point_param {
    num_landmark: 5
  }  
 
}

# test data
layer {
  name: "lmdb_data_test"
  type: "Data"
  top: "data"
  include {
    phase: TEST
  }
  data_param {
    source: "./experiments/data_processing/dataset/test/lfw_net_224x224_rgb_data"
    batch_size: 32
    backend: LMDB
  }
  transform_param {
    mean_file: "./experiments/data_processing/dataset/test/lfw_net_224x224_rgb_mean.binaryproto"
  }
}

layer {
  name: "lmdb_landmark_test"
  type: "Data"
  top: "landmark"
  include {
    phase: TEST
  }
  data_param {
    source: "./experiments/data_processing/dataset/test/lfw_net_224x224_rgb_landmark"
    batch_size: 32
    backend: LMDB
  }
}

layer {
  name: "lmdb_root"
  type: "AveragePoint"
  bottom: "landmark"
  top: "root"
  propagate_down: false
  include {
    phase: TEST
  }

  average_point_param {
    num_landmark: 5
  }  
 
}

layer {
  name: "lmdb_eyedist_test"
  type: "Data"
  top: "eyedist"
  include {
    phase: TEST
  }
  data_param {
    source: "./experiments/data_processing/dataset/test/lfw_net_224x224_rgb_eyedist"
    batch_size: 32
    backend: LMDB
  }
}

# network architecture
layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1_2"
  top: "conv1_2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2_2"
  top: "conv2_2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "conv5_3"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  bottom: "pool5"
  top: "fc6"
  name: "fc6"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "fc6"
  top: "fc6"
  name: "relu6"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "fc6"
  top: "fc6"
  name: "drop6"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  bottom: "fc6"
  top: "fc7"
  name: "fc7"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "fc7"
  top: "fc7"
  name: "relu7"
  type: "ReLU"
  relu_param {
    negative_slope: 0.2
  }
}

layer {
  bottom: "fc7"
  top: "fc7"
  name: "drop7"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  bottom: "fc7"
  top: "fc8"
  name: "lm_fc8"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 12
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

##### compute structural loss
layer{
   name: "slice"
   type: "Slice"
   bottom: "fc8"
   top:  "lm_5_points"
   top:  "lm_root"
   slice_param{
     axis: 1
     slice_point: 10
   }
   include {
    phase: TEST
  }
}

layer {
  name: "silence"
  type: "Silence"
  bottom: "lm_root"
  include {
    phase: TEST
  }
}


layer {
  name: "performance"
  type: "FacialLandmarkPerformance"
  bottom: "lm_5_points"
  bottom: "landmark"
  bottom: "eyedist"
  top: "average_error"
  top: "false_rate"
  
  facial_landmark_performance_param {
    num_landmark: 5
    error_threshold: 0.1
  }
  include {
    phase: TEST
  }
}

# for computing euclidean loss and structural loss
layer{
   name: "concat"
   type: "Concat"
   bottom: "landmark"
   bottom: "root"
   top:  "lm_landmark"
   concat_param{
     axis: 1
   }
}

layer {
  name: "euclidean_loss"
  type: "EuclideanLoss"
  bottom: "fc8"
  bottom: "lm_landmark"
  top: "euclidean_loss"
  loss_weight: 10
}


layer {
  name: "structual_loss"
  type: "StructualLoss"
  bottom: "fc8"
  bottom: "lm_landmark"
  top: "structual_loss"
  structual_loss_param { 
    num_landmark: 5
    w0: 1.0
    w1: 0.5
    w2: 1.0
    w3: 0.5
  }
}
